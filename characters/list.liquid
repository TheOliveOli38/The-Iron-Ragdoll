---
layout: layout.liquid
title: Characters list
desc: A sortable text list of characters.
eleventyNavigation:
  key: Characters list
  title: List
  parent: Characters
---
<link rel="stylesheet" href="/css/ch-list.css"/>
<h1>Characters List</h1>
<div class="table-container">
    <table>
        <thead>
            <tr>
                <th>No.</th>
                <th>Name</th>
                <th>中文</th>
                <th>Nationality</th>
                <th>Color</th>
            </tr>
        </thead>
        <tbody>
            {% for ch in characters %}
                <tr>
                    <td>{{ forloop.index }}</td>
                    <td><a href="/characters/{{ ch.name | lowerCase }}/">{{ ch.name }}</a></td>
                    <td><a href="/characters/{{ ch.name | lowerCase }}/">{{ ch.namezh }}</a></td>
                    <td>{{ ch.attr.Nationality }}</td>
                    <td style="background-color: {{ ch.color }};"></td>
                </tr>
            {% endfor %}
        </tbody>
    </table>
</div>
<script src="/js/sort.js"></script>
<script>
    let sort = new SortTable(document.querySelector('table'));
    sort.addSort({
        colName: 'No.',
        keyFunc: (td) => parseInt(td.innerText),
        sortFunc: SortTable.sortFuncNumber
    });
    sort.addSort({
        colName: 'Name',
        keyFunc: (td) => td.querySelector('a').innerText,
        sortFunc: SortTable.sortFuncString
    });
    sort.addSort({
        colName: '中文',
        keyFunc: (td) => td.querySelector('a').innerText,
        sortFunc: SortTable.sortFuncZh
    });
    sort.addSort({
        colName: 'Nationality',
        keyFunc: (td) => td.innerText,
        sortFunc: (a, b) => {
            let countries = ['Bauhinian', 'Fantoni', 'Atlasian', 'Westavian', 'Moose', 'Sylvandian'];
            function get(a) {
                for(let z = 0; z < countries.length; z++) {
                    if(a.includes(countries[z])) {
                        return z;
                    }
                }
                return 10;
            }
            return get(a) - get(b);
        }
    });
    sort.addSort({
        colName: 'Color',
        keyFunc: (td) => SortTable.RGBToHSL(td.style.backgroundColor),
        sortFunc: SortTable.sortFuncHSL
    });
</script>