---
layout: layout.liquid
title: Gallery
---

<div id="gallery">
	{% for img in gallery %}
		<div>
			{% if img.comment %}
				<div class="tooltip">
					<span class="tooltip-text">Comment attached</span>
					<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-ellipsis"><circle cx="12" cy="12" r="1"/><circle cx="19" cy="12" r="1"/><circle cx="5" cy="12" r="1"/></svg>
				</div>
			{% endif %}
			{% image "gallery/" img.name img.type 200 "" %}
		</div>
	{% endfor %}
</div>
<div id="modals">
	{% for img in gallery %}
		<div class="modal">
			<div class="close">
				<svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="square" stroke-linejoin="miter" class="lucide lucide-x"><path d="M18 6 6 18"/><path d="m6 6 12 12"/></svg>
			</div>
			{% assign bruhhh = img.name | append: "." | append: img.type %}
			{% imageOrig "gallery/" bruhhh "" %}
			{% if img.comment %}
				<div class="comment">
					{{ img.comment | renderMD }}
				</div>
			{% endif %}
		</div>
	{% endfor %}
</div>
<script>
let divs = document.getElementById('gallery').children;
let modals = document.getElementById('modals').children;
for(let z = 0; z < divs.length; z++) {
	divs[z].addEventListener('click', e => {
		let modal = modals[z];
		let close = modal.querySelector('.close');
		modal.style.display = 'flex';
		document.body.style.overflow = 'hidden';
		close.addEventListener('click', e => {
			modal.style.display = 'none';
			document.body.style.overflow = 'scroll';
		});
// 		let img = divs[z].children[0];
// 		let content = elt('div', {className: 'modal-content'});
// 		let metadata = await Image('img/gallery/sparky jerboa deal.png', {
// 			widths: ['auto'],
// 			formats: ['auto'],
// 			urlPath: '/img/gallery/',
// 			outputDir: './_site/img/gallery'
// 		});
// 		let imageAttributes = {
// 			alt,
// 			loading: "lazy",
// 			decoding: "async",
// 		};
// 		content.innerHTML = (Image.generateHTML(metadata, imageAttributes));
// 		let box = elt('div', {className: 'modal'}, content);
// 		box.addEventListener('click', e => {
// 			document.body.removeChild(box);
// 		});
// 		document.body.appendChild(box);
	});
}
function elt(type,props,...children){let dom=document.createElement(type);if(props)Object.assign(dom,props);for(let child of children){if(typeof child!="string")dom.appendChild(child);else dom.appendChild(document.createTextNode(child));}return(dom);}
</script>